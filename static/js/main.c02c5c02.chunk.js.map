{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","string","setString","result","setResult","className","value","onChange","e","currentTarget","type","onClick","disabled","text","wordsToLowerCase","split","map","x","replace","filter","word","toLowerCase","uniqueLetterFromWord","forEach","find","t","indexOf","lastIndexOf","push","resultLetter","letter","findUniqueLetter","classNames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAIaA,EAAgB,WAC3B,MAA4BC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAiB,IAA7C,mBAAOG,EAAP,KAAeC,EAAf,KAgCA,OACE,sBAAKC,UAAU,MAAf,UACE,oDACA,sBAAKA,UAAU,YAAf,UACE,uBAAOC,MAAOL,EAAQM,SAAU,SAACC,GAAD,OAAON,EAAUM,EAAEC,cAAcH,QAAQI,KAAK,SAE9E,wBACEC,QAAS,kBAAMT,EAAU,KACzBQ,KAAK,SACLE,UAAWX,EAHb,2BASF,wBACEU,QAAS,kBA9CU,SAACE,GACxB,IAGMC,EAHQD,EAAKE,MAAM,KACGC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAQ,QAAS,QACrBC,QAAO,SAAAC,GAAI,MAAa,KAATA,KACZJ,KAAI,SAAAI,GAAI,OAAIA,EAAKC,iBACjDC,EAAiC,GAEvCR,EAAiBS,SAAQ,SAAAH,GACbA,EAAKL,MAAM,IAEnBS,MAAK,SAAAC,GACL,OAAIL,EAAKM,QAAQD,KAAOL,EAAKO,YAAYF,GAChCH,EAAqBM,KAAKH,GAG5B,WAIX,IAAMI,EAAeP,EAAqBH,QAAO,SAAAW,GAC/C,OAAIR,EAAqBI,QAAQI,KAAYR,EAAqBK,YAAYG,GACrEA,EAGF,QAGT,OAAO1B,EAAUyB,EAAa,IAAM,qBAmBjBE,CAAiB9B,IAChCS,KAAK,SACLE,UAAWX,EAHb,gCAQA,mBACEI,UAAW2B,IACT,cAAe,CACb,uBAAwB7B,IAH9B,2BAOcA,SC/DpB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c02c5c02.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [string, setString] = useState<string>('');\n  const [result, setResult] = useState<string>('');\n\n  const findUniqueLetter = (text: string) => {\n    const words = text.split(' ');\n    const deleteNewLine = words.map(x => x.replace(/[\\n]/g, ' '));\n    const deleteSpaces = deleteNewLine.filter(word => word !== '');\n    const wordsToLowerCase = deleteSpaces.map(word => word.toLowerCase());\n    const uniqueLetterFromWord: string[] = [];\n\n    wordsToLowerCase.forEach(word => {\n      const x = word.split('');\n\n      x.find(t => {\n        if (word.indexOf(t) === word.lastIndexOf(t)) {\n          return uniqueLetterFromWord.push(t);\n        }\n\n        return null;\n      });\n    });\n\n    const resultLetter = uniqueLetterFromWord.filter(letter => {\n      if (uniqueLetterFromWord.indexOf(letter) === uniqueLetterFromWord.lastIndexOf(letter)) {\n        return letter;\n      }\n\n      return null;\n    });\n\n    return setResult(resultLetter[0] || 'No unique letter!');\n  };\n\n  return (\n    <div className=\"app\">\n      <h3>Find unique letter</h3>\n      <div className=\"app__main\">\n        <input value={string} onChange={(e) => setString(e.currentTarget.value)} type=\"text\" />\n\n        <button\n          onClick={() => setString('')}\n          type=\"button\"\n          disabled={!string}\n        >\n          Delete all\n        </button>\n      </div>\n\n      <button\n        onClick={() => findUniqueLetter(string)}\n        type=\"button\"\n        disabled={!string}\n      >\n        Find unique letter\n      </button>\n\n      <p\n        className={classNames(\n          'app__result', {\n            'app__result--hidden': !result,\n          },\n        )}\n      >\n        {`Result: ${result}`}\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}